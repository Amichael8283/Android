apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.kotlin.android.extensions'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28

        versionCode 53
        versionName "1.0.1"
        buildConfigField "String", "VERSION_DATE", '"21 Nov 2018"'
        project.ext.set("archivesBaseName", "moviemade-v" + versionName)
        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    // Command: gradlew assembleRelease

    signingConfigs {
        release {
            keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
            keyPassword keystoreProperties['RELEASE_KEY_PASS']
            storeFile file(keystoreProperties['RELEASE_STORE_FILE'])
            storePassword keystoreProperties['RELEASE_STORE_PASS']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "market", "develop"

    productFlavors {
        releasing {
            flavorDimensions "market"
            applicationId "org.michaelbel.moviemade"
        }

        developing {
            flavorDimensions "develop"
            applicationId "org.michaelbel.moviemade.beta"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    // android support
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:customtabs:28.0.0'
    // rxjava2
    implementation 'io.reactivex.rxjava2:rxjava:2.1.15'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    // okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    // realm
    implementation 'io.realm:android-adapters:2.1.1'
    // glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    // moxy
    implementation 'com.arello-mobile:moxy:1.5.5'
    annotationProcessor 'com.arello-mobile:moxy-compiler:1.5.5'
    // youtube player
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:8.0.1'
    // gesture views
    implementation 'com.alexvasilkov:events:1.0.0'
    implementation 'com.alexvasilkov:gesture-views:2.4.0'
    implementation 'com.alexvasilkov:android-commons:2.0.2'
    // dagger
    implementation 'com.google.dagger:dagger:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.16'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    // butterknife
    implementation 'com.jakewharton:butterknife:9.0.0-rc1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc1'
    // room
    implementation "android.arch.persistence.room:runtime:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    // kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.10'
    // chips
    implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7'
    // circle image
    implementation 'de.hdodenhof:circleimageview:2.2.0'



    // JUnit
    testImplementation 'junit:junit:4.12'
    // Robolectric
    testImplementation 'androidx.test:core:1.0.0'
    // Mockito
    testImplementation 'org.mockito:mockito-core:2.23.0'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}