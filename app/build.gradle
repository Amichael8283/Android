plugins {
    id 'com.android.application'
    id 'io.fabric'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
}

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

def keystorePropertiesFile = rootProject.file("config/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        applicationId "org.michaelbel.moviemade"
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        project.ext.set("archivesBaseName", "moviemade-v" + versionName)
        buildConfigField "long", "VERSION_DATE", System.currentTimeMillis() + "L"
        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "TMDB_API_KEY")}\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            useProguard false
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
        exclude 'NOTICE'
        exclude 'NOTICE.txt'

        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        lintConfig file('lint.xml')

        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false

        /*textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        ignoreWarnings false
        checkReleaseBuilds true
        htmlReport true
        xmlReport true
        lintConfig file("$projectDir/lint.xml")
        fatal 'StopShip'*/
        
        //disable 'MissingTranslation'
        //disable 'ExtraTranslation'
    }
}

dependencies {
    implementation project(':core')
    implementation project(':domain')

    implementation "android.arch.work:work-runtime:1.0.1"
    implementation "android.arch.work:work-runtime-ktx:1.0.1"
    implementation "com.google.android.play:core:1.6.3"
    implementation "com.google.android.material:material:1.1.0-alpha10"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "com.github.bumptech.glide:glide:4.9.0"
    kapt "com.github.bumptech.glide:compiler:4.9.0"
    implementation "com.google.dagger:dagger:2.21"
    kapt "com.google.dagger:dagger-compiler:2.21"
    implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7'
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:8.0.1'
    implementation 'com.alexvasilkov:events:1.0.0'
    implementation 'com.alexvasilkov:gesture-views:2.4.0'
    implementation 'com.alexvasilkov:android-commons:2.0.2'
    implementation "androidx.activity:activity:1.1.0-beta01"
    implementation "androidx.activity:activity-ktx:1.1.0-beta01"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.appcompat:appcompat-resources:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.vectordrawable:vectordrawable:1.1.0"
    implementation "androidx.vectordrawable:vectordrawable-animated:1.1.0"
    implementation "com.tspoon.traceur:traceur:1.0.1"
    implementation "com.facebook.stetho:stetho-okhttp3:1.5.0"
    debugImplementation "com.github.ajitsing:sherlock:1.0.4"
    releaseImplementation "com.github.ajitsing:sherlock-no-op:1.0.4"
    debugImplementation "com.readystatesoftware.chuck:library:1.1.0"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:1.1.0"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.0-alpha-1"
}

apply plugin: 'com.google.gms.google-services'