apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

def keystorePropertiesFile = rootProject.file("config/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28

        defaultPublishConfig 'debug'

        versionCode 66
        versionName "1.3.0"
        buildConfigField "String", "VERSION_DATE", '"19 Feb 2019"'
        project.ext.set("archivesBaseName", "moviemade-v" + versionName)
        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "TMDB_API_KEY")}\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "market", "beta"

    productFlavors {
        releasing {
            flavorDimensions "market"
            minSdkVersion 21
            applicationId "org.michaelbel.moviemade"
            signingConfig signingConfigs.release
        }

        developing {
            flavorDimensions "beta"
            minSdkVersion 21
            applicationId "org.michaelbel.moviemade.beta"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'LICENSE.txt'
        exclude 'NOTICE'
        exclude 'NOTICE.txt'

        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/license/LICENSE.base64.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        /*textOutput "stdout"
        textReport true
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        ignoreWarnings false
        checkReleaseBuilds true
        htmlReport true
        xmlReport true
        lintConfig file("$projectDir/lint.xml")
        fatal 'StopShip'*/

        abortOnError false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }

    /*dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "8g"
    }*/

    /*applicationVariants.all { variant ->
        variant.assemble.doLast {
            if (variant.buildType.name.contains('release')) {
                def path = null
                variant.outputs.each { output ->
                    path = output.outputFile
                }

                exec {
                    ['explorer', '/select,', path].execute()
                }
            }
        }
    }*/
}

dependencies {
    implementation project(':core')
    implementation project(':domain')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_version"

    implementation "android.arch.work:work-runtime:$work_version"
    implementation "android.arch.work:work-runtime-ktx:$work_version"

    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.cardview:cardview:$androidx_version"
    implementation "androidx.vectordrawable:vectordrawable:$vectordrawable_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.preference:preference:$preference_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.tspoon.traceur:traceur:$traceur_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"

    debugImplementation "com.github.ajitsing:sherlock:$sherlock_version"
    debugImplementation "com.readystatesoftware.chuck:library:$chuck_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    //implementation 'com.android.billingclient:billing:1.0'
    //implementation 'com.google.android.gms:play-services-ads:17.1.3'
    //implementation 'com.google.android.gms:play-services-analytics:16.0.7'

    implementation "com.github.matthiasrobbers:shortbread:$shortbread_version" // fixme remove
    kapt "com.github.matthiasrobbers:shortbread-compiler:$shortbread_version"  // fixme remove

    implementation 'de.hdodenhof:circleimageview:2.2.0' // fixme remove
    implementation 'com.beloo.widget:ChipsLayoutManager:0.3.7' // fixme remove
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:8.0.1' // fixme remove

    implementation 'com.alexvasilkov:events:1.0.0' // fixme remove
    implementation 'com.alexvasilkov:gesture-views:2.4.0' // fixme remove
    implementation 'com.alexvasilkov:android-commons:2.0.2' // fixme remove
}

//apply plugin: 'com.google.gms.google-services'